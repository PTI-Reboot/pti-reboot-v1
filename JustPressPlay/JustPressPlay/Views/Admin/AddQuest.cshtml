@model JustPressPlay.ViewModels.AddQuestViewModel

@{
    ViewBag.Title = "AddQuest";
}

<div id="adminBody">

    <div class="row wide">

        <div class="large-3 columns">

            @{ Html.RenderPartial("_AdminNavigation"); }

        </div>

        <div class="large-9 columns">

            <div class="panel">
                <h2>Create Quest</h2>

                @using (Html.BeginForm("AddQuest", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "parentForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Title)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Title)
                            @Html.ValidationMessageFor(model => model.Title)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Description)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Description)
                            @Html.ValidationMessageFor(model => model.Description)
                        </div>
                        <div>
                            @Html.LabelFor(model => model.SelectedAchievementsList)
                            @Html.ListBoxFor(model => model.SelectedAchievementsList, new SelectList(Model.AchievementsList, "id", "title"))
                            @Html.ValidationMessageFor(model => model.SelectedAchievementsList)
                        </div>


                        <div class="editor-label">
                            @Html.LabelFor(model => model.Threshold)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Threshold, new { type = "number"})
                            @Html.ValidationMessageFor(model => model.Threshold)
                        </div>
                }
                    </div>
                    <div class="panel icon-picker">
                            <div>
                                    @Html.LabelFor(m => m.Icon)
								    @{ int counter = 0; }
								    @foreach (String icon in Model.IconList)
								    {
									    String label = "icon" + counter;
			
									    <span style="float:left; margin:3px;">
										    @Html.RadioButtonFor(m => m.Icon, icon, new { id = label })
										    <label for="@label"><img width="80px" height="80px" style="background-color:black;" src="@Url.Content(JustPressPlay.Utilities.JPPConstants.Images.IconPath + icon + ".png")" /></label>
									    </span>
			
									    counter++;
								    }
                                    @Html.ValidationMessageFor(m => m.Icon)
                            </div>
                            
                
                    </div>
                    <div class="panel" id="addquest-btns">
                        <p>When saved, this quest will be put in draft mode. Review it in draft mode and switch it to active to make it visible to all players.</p>
                               <input type="submit" value="Create"  />
                     </div>        

        </div>

    </div>
</div>