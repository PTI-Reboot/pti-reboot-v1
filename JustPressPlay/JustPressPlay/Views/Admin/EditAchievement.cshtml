@{
    ViewBag.Title = "EditAchievement";
}
@model JustPressPlay.ViewModels.EditAchievementViewModel

<div id="adminBody">

    <div class="row wide">

        <div class="large-3 columns">

            @{ Html.RenderPartial("_AdminNavigation"); }

        </div>

        <div class="large-9 columns">

            <div class="panel">
                <h2>Edit Achievement</h2>

                @using (Html.BeginForm("EditAchievement", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "parentForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary()
                    
                        <ol>

                                @Html.LabelFor(m => m.State)
                                @Html.DropDownListFor(m => m.State, JustPressPlay.Utilities.JPPConstants.SelectListFromEnum<JustPressPlay.Utilities.JPPConstants.AchievementQuestStates>())
                                @Html.ValidationMessageFor(m => m.State)

                        <div id="admin-title">
                           @Html.LabelFor(m => m.Title)
                           @Html.TextBoxFor(m=> m.Title)
                           @Html.ValidationMessageFor(m => m.Title)
                        </div>
                         
                            @Html.LabelFor(m => m.Description)
                            @Html.TextAreaFor(m => m.Description)
                            @Html.ValidationMessageFor(m => m.Description)

                            <div>
                              <div class="row collapse" id="req1">
                                <div class="small-3 large-2 columns">
                                  <span class="prefix">Requirement 1</span>
                                </div>
                                <div class="small-9 large-10 columns">
                                    @Html.TextBoxFor(m => m.Requirement1)
                                    @Html.ValidationMessageFor(m => m.Requirement1)
                                </div>
                              </div>
                          </div>

                          <div class="AchievementReq" id="req2">
                              <div class="row collapse">
                                <div class="small-3 large-2 columns">
                                  <span class="prefix">Requirement 2</span>
                                </div>
                                <div class="small-9 large-10 columns">
                                    @Html.TextBoxFor(m => m.Requirement2)
                                    @Html.ValidationMessageFor(m => m.Requirement2)
                                </div>
                              </div>
                          </div>
                    
                          <div class="AchievementReq" id="req3">
                              <div class="row collapse">
                                <div class="small-3 large-2 columns">
                                  <span class="prefix">Requirement 3</span>
                                </div>
                                <div class="small-9 large-10 columns">
                                    @Html.TextBoxFor(m => m.Requirement3)
                                    @Html.ValidationMessageFor(m => m.Requirement3)
                                </div>
                              </div>
                          </div>
                          <div class="AchievementReq" id="req4">
                              <div class="row collapse">
                                <div class="small-3 large-2 columns">
                                  <span class="prefix">Requirement 4</span>
                                </div>
                                <div class="small-9 large-10 columns">
                                    @Html.TextBoxFor(m => m.Requirement4)
                                    @Html.ValidationMessageFor(m => m.Requirement4)
                                </div>
                              </div>
                          </div>                    
                          <div class="AchievementReq" id="req5">
                              <div class="row collapse">
                                <div class="small-3 large-2 columns">
                                  <span class="prefix">Requirement 5</span>
                                </div>
                                <div class="small-9 large-10 columns">
                                    @Html.TextBoxFor(m => m.Requirement5)
                                    @Html.ValidationMessageFor(m => m.Requirement5)
                                </div>
                              </div>
                          </div>
                    
                          <div class="AchievementReq" id="req6">
                              <div class="row collapse">
                                <div class="small-3 large-2 columns">
                                  <span class="prefix">Requirement 6</span>
                                </div>
                                <div class="small-9 large-10 columns">
                                    @Html.TextBoxFor(m => m.Requirement6)
                                    @Html.ValidationMessageFor(m => m.Requirement6)
                                </div>
                              </div>
                          </div>               
                    
                    
                    
                        <ul class="button-group">
                          <li><a onclick="addRequirement()" class="button [alert success secondary] small" id="add-btn">Add Requirement</a></li>
                          <li><a onclick="removeRequirement()" class="button [secondary alert success] small" id="rmv-btn">Remove Requirement</a></li>
                        </ul>

                          @*  @for (int i = 0; i < Model.RequirementsList.Count; i++)
                            {
                                <li>
                                    @Html.LabelFor(m => m.RequirementsList[i])
                                    @Html.TextBoxFor(m => m.RequirementsList[i])
                                    @Html.ValidationMessageFor(m => m.RequirementsList[i])
                                </li>
                            }*@
                            <li>
                                @Html.LabelFor(m => m.PointsCreate)
                                @Html.TextBoxFor(m => m.PointsCreate)
                                @Html.ValidationMessageFor(m => m.PointsCreate)
                            </li>
                             <li>
                                @Html.LabelFor(m => m.PointsExplore)
                                @Html.TextBoxFor(m => m.PointsExplore)
                                @Html.ValidationMessageFor(m => m.PointsExplore)
                            </li>
                             <li>
                                @Html.LabelFor(m => m.PointsLearn)
                                @Html.TextBoxFor(m => m.PointsLearn)
                                @Html.ValidationMessageFor(m => m.PointsLearn)
                            </li>
                             <li>
                                @Html.LabelFor(m => m.PointsSocialize)
                                @Html.TextBoxFor(m => m.PointsSocialize)
                                @Html.ValidationMessageFor(m => m.PointsSocialize)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.Type)
                                @Html.DropDownListFor(m => m.Type, JustPressPlay.Utilities.JPPConstants.SelectListFromEnum<JustPressPlay.Utilities.JPPConstants.AchievementTypes>())
                                @Html.ValidationMessageFor(m => m.Type)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.Hidden)
                                @Html.CheckBoxFor(m => m.Hidden)
                                @Html.ValidationMessageFor(m => m.Hidden)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.IsRepeatable)
                                @Html.CheckBoxFor(m => m.IsRepeatable)
                                @Html.ValidationMessageFor(m => m.IsRepeatable)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.RepeatDelayDays)
                                @Html.TextBoxFor(m => m.RepeatDelayDays)
                                @Html.ValidationMessageFor(m => m.RepeatDelayDays)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.SelectedCaretakersList)
                                @Html.ListBoxFor(m => m.SelectedCaretakersList, new SelectList(Model.PotentialCaretakersList, "id", "display_name"))
                                @Html.ValidationMessageFor(m => m.SelectedCaretakersList)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.ParentID)
                                @Html.DropDownListFor(m => m.ParentID, new SelectList(Model.ParentAchievements, "id", "title"))
                                @Html.ValidationMessageFor(m => m.ParentID)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.Threshold)
                                @Html.TextBoxFor(m => m.Threshold)
                                @Html.ValidationMessageFor(m => m.Threshold)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.ContentType)
                                @Html.DropDownListFor(m => m.ContentType, JustPressPlay.Utilities.JPPConstants.SelectListFromEnum<JustPressPlay.Utilities.JPPConstants.UserSubmissionTypes>())
                                @Html.ValidationMessageFor(m => m.ContentType)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.SystemTriggerType)
                                @Html.DropDownListFor(m => m.SystemTriggerType, JustPressPlay.Utilities.JPPConstants.SelectListFromEnum<JustPressPlay.Utilities.JPPConstants.SystemAchievementTypes>())
                                @Html.ValidationMessageFor(m => m.SystemTriggerType)
                            </li>
			    <div class="row">
                    <div class="large-12 columns">
                        <div class="panel icon-picker">
                            <h4>Select a Photo</h4>
								@{ int counter = 0; }
								@foreach (String icon in Model.IconList)
								{
									String label = "icon" + counter;
			
									<span style="float:left; margin:3px;">
										@Html.RadioButtonFor(m => m.Icon, icon, new { id = label })
										<label for="@label"><img width="80px" height="80px" style="background-color:black;" src="@Url.Content(JustPressPlay.Utilities.JPPConstants.Images.IconPath + icon + ".png")" /></label>
									</span>
									counter++;
								}
                                @Html.ValidationMessageFor(m => m.Icon)
                        </div>
                    </div>
                </div>
                        </ol>
                    <input type="submit" value ="Save Achievement" />
                }
            </div>

        </div>

    </div>
</div>

<!-- This script is included here because it has document.ready functions that only apply to this page-->
<script src="@Url.Content("~/Content/js/editAchievments.js")" type="text/javascript"></script>