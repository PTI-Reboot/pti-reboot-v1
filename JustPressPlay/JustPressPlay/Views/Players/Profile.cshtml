@{
    ViewBag.Title = "Profile";
}

@model JustPressPlay.ViewModels.ProfileViewModel

<div id="headerSection">
    <div class="row">

        <div class="large-8 columns">

            @if (@WebSecurity.CurrentUserId == @Model.ID)
            { // Build edit form
                <div id="edit-profile" class="row">

                    <div class="edit-profile-click-area" data-bind="click: showEditProfileForm, visible: !editProfileFormVisible()"></div>

                    <form class="edit-profile-form" action="/Players/UserEditProfile" method="post">
                        <!--<input type="hidden" name="userID" value="@Model.ID" />-->

                        <div class="large-4 columns">
                            <div id="heading-image">
                                <img src="#" data-bind="attr: { src: imageURL }" />
                            </div>

                            <div data-bind="visible: editProfileFormVisible()">
                                <input class="file-input" type="file" name="image" data-bind="event: { change: updateFilePath }" />
                                <input class="file-input-button button expand" type="button" value="Select New Image" data-bind="click: fileInputClick" />
                                <p class="file-input-path" data-bind="text: imageFilePath"></p>
                            </div>

                        </div>

                        <div class="large-8 columns">
                            <h4>@Model.FirstName @Model.LastName</h4>
                            <h1 data-bind="visible: !editProfileFormVisible(), text: displayName"></h1>
                            <input id="input-display-name" type="text" name="displayName" placeholder="Display Name" data-bind="visible: editProfileFormVisible(), value: displayNameEdit" />
                            
                            <h2 data-bind="visible: !editProfileFormVisible(), text: sixWordBio"></h2>
                            <input id="input-six-word-bio" type="text" name="sixWordBio" placeholder="Six Word Bio" data-bind="visible: editProfileFormVisible(), value: sixWordBioEdit" />
                            <p data-bind="visible: !editProfileFormVisible(), text: fullBio"></p>
                            <textarea id="input-full-bio" name="fullBio" placeholder="Full Bio" data-bind="visible: editProfileFormVisible(), value: fullBioEdit"></textarea>
                        </div>

                        <div class="large-12 columns">
                            <div class="right" data-bind="visible: editProfileFormVisible()">
                                <div class="spinner" data-bind="visible: editProfileFormSubmitting"></div>
                                <input class="button cancel" type="button" value="Cancel" data-bind="click: cancelEditProfile"/>
                                <input class="button save" type="submit" value="Save" data-bind="click: saveProfile" />
                            </div>
                        </div>
                    </form>

                </div>
                
                <script>
                    var modelData = {
                        displayName: '@Html.Raw(HttpUtility.JavaScriptStringEncode(Model.DisplayName))',
                        sixWordBio: '@Html.Raw(HttpUtility.JavaScriptStringEncode(Model.SixWordBio))',
                        fullBio: '@Html.Raw(HttpUtility.JavaScriptStringEncode(Model.FullBio))',
                        image: '@Model.Image'
                    }

                    ko.applyBindings(new EditProfileViewModel(modelData), document.getElementById('edit-profile'));
                </script>
            }
            else
            { // Only display user info
                <div class="row">

                    <div class="large-4 columns">
                        <div id="heading-image">
                            @if (!@Model.Image.IsEmpty())
                            {
                                <img src="@Url.Content(@Model.Image)" />
                            }
                            else
                            {
                                <img src="@Url.Content("~/Content/Images/Jpp/defaultProfileAvatar.png")" />
                            }
                        </div>

                        @if (@Model.FriendStatus == JustPressPlay.ViewModels.ProfileViewModel.FriendshipStatus.Friends)
                        {
                            using (Html.BeginForm("RemoveFriend", "Players", FormMethod.Post))
                            {
					            <input type="hidden" name="id" value="@Model.ID" />
					            <button type="submit" class="expand flip-text remove-friend">
                                    <span class="text-1">You are friends</span>
                                    <span class="text-2">Remove Friend</span>
					            </button>
                            }
                        }
                        else if (@Model.FriendStatus == JustPressPlay.ViewModels.ProfileViewModel.FriendshipStatus.NotFriends)
                        {
                            using (Html.BeginForm("AddFriend", "Players", FormMethod.Post))
                            {
					            <input type="hidden" name="id" value="@Model.ID" />
					            <button type="submit" class="expand flip-text add-friend">
                                    <span class="text-1">You are not friends</span>
                                    <span class="text-2">Add Friend</span>
					            </button>
                            }
                        }
                        else if (@Model.FriendStatus == JustPressPlay.ViewModels.ProfileViewModel.FriendshipStatus.PendingRequestSent)
                        {
				            <a href="#" class="button expand disabled">Friend Request Sent</a>
                        }
                        else if (@Model.FriendStatus == JustPressPlay.ViewModels.ProfileViewModel.FriendshipStatus.PendingRequestReceived)
                        {
				            <a href="#" class="button secondary radius expand tiny">Pending Friend Request - Respond?</a>
                        }
                    </div>
                    <div class="large-8 columns">
                        <h1>@Model.DisplayName</h1>
                        <h4>(@Model.FirstName @Model.LastName)</h4>
                        <h2>@Model.SixWordBio</h2>
                        <p>@Model.FullBio</p>
                    </div>

                </div>
            }

            

        </div>

        <div class="large-4 columns">
            <div id="profileQuad"></div>
        </div>


    </div>
</div>

<div id="lowerBody">
        <div class="row">
            <div class="large-8 columns">
                
                @if (@WebSecurity.CurrentUserId == @Model.ID)
                {
                    <h3>Your Timeline</h3>
                }
                else
                {
                    <h3>@Model.DisplayName's Timeline</h3>
                }

                <!--<div class="fullscreen-image" data-bind="template: { name: 'person-template', data: buyer }"></div>-->

                <div id="earning-feed" class="earningFeed">
                    <div data-bind="template: { name: 'earning-wide-template', foreach: earnings }">
                    </div>

                    <div class="bottom">
                        <div class="spinner" data-bind="visible: isLoading"></div>
                        <div class="endOfFeed" data-bind="visible: atEnd">
                            <h6>End of Feed</h6>
                        </div>
                        <div data-bind="visible: isEmpty">
                            <p>There's nothing here!</p>
                        </div>
                    </div>
                </div>

            </div>

            <div id="lowerBodySidebar" class="large-4 columns">
                @*
                @if (@WebSecurity.CurrentUserId == @Model.ID)
                {
                    <h3>Your Collections</h3>
                }
                else
                {
                    <h3>@Model.DisplayName's Collections</h3>
                }
                *@

                <div class="jpp-panel">
                    <div id="profile-quest-list">
                        <h4>Quests<span data-bind="text: ' - ' + total()"></span></h4>
                        <ul class="item-container small-block-grid-4" data-bind="template: { name: 'profile-quest-item', foreach: displayListItems }">
                        </ul>

                        <div class="bottom">
                            <div class="spinner" data-bind="visible: loading"></div>
                            <div class="empty-message" data-bind="visible: empty"><p>Nothing here!</p></div>
                            <div class="page-select" data-bind="visible: pageCount() > 1">
                                <button class="left" data-bind="click: prevPage()">Prev</button>
                                <p class="page-count" data-bind="text: currentPage() + '/' + pageCount()"></p>
                                <button class="right" data-bind="click: nextPage()">Next</button>
                            </div>
                        </div>
                    </div>
                </div>
                    
                <div class="jpp-panel">
                    <div id="profile-achievement-list">
                        <h4>Achievements<span data-bind="text: ' - ' + total()"></span></h4>
                        <ul class="item-container small-block-grid-4" data-bind="template: { name: 'profile-achievement-item', foreach: displayListItems }">
                        </ul>

                        <div class="bottom">
                            <div class="spinner" data-bind="visible: loading"></div>
                            <div class="empty-message" data-bind="visible: empty"><p>Nothing here!</p></div>
                            <div class="page-select" data-bind="visible: pageCount() > 1">
                                <button class="left" data-bind="click: prevPage()">Prev</button>
                                <p class="page-count" data-bind="text: currentPage() + '/' + pageCount()"></p>
                                <button class="right" data-bind="click: nextPage()">Next</button>
                            </div>
                        </div>
                    </div>
                </div>
                    
                <div class="jpp-panel">
                    <div id="profile-player-list">
                        <h4>Friends<span data-bind="text: ' - ' + total()"></span></h4>
                        <ul class="item-container small-block-grid-4" data-bind="template: { name: 'profile-player-item', foreach: displayListItems }">
                        </ul>

                        <div class="bottom">
                            <div class="spinner" data-bind="visible: loading"></div>
                            <div class="empty-message" data-bind="visible: empty"><p>Nothing here!</p></div>
                            <div class="page-select" data-bind="visible: pageCount() > 1">
                                <button class="left" data-bind="click: prevPage()">Prev</button>
                                <p class="page-count" data-bind="text: currentPage() + '/' + pageCount()"></p>
                                <button class="right" data-bind="click: nextPage()">Next</button>
                            </div>
                        </div>
                    </div>
                </div>

                

                <footer class="small">

                    @{ Html.RenderPartial("_Footer"); }

                </footer>

            </div> <!-- END lowerBodySidebar -->

        </div>
    </div>

<div id="earning-fullscreen" data-bind="visible: fullscreenEarningVisible()">
    <div class="shades" data-bind="click: closeFullscreenEarning"></div>
    <div class="fullscreen-earning-container" data-bind="style: { top: scrolledHeight() + 'px' }, template: { name: 'earning-fullscreen-template', data: currentEarning }">
    </div>
</div>

@{ Html.RenderPartial("_EarningTemplates"); }
@{ Html.RenderPartial("_ProfileListTemplates"); }
<script src="@Url.Content("~/Content/js/plugin/jquery.jppquad.js")" type="text/javascript"></script>
<script>


    


    var settings = {
        playerID: '@Model.ID'
    };
    ko.applyBindings(new EarningListViewModel(settings), document.getElementById('earning-feed'));
    ko.applyBindings(new ShareEarningViewModel, document.getElementById('earning-fullscreen'));
    ko.applyBindings(new ProfileListViewModel(0, settings), document.getElementById('profile-quest-list'));
    ko.applyBindings(new ProfileListViewModel(1, settings), document.getElementById('profile-achievement-list'));
    ko.applyBindings(new ProfileListViewModel(2, settings), document.getElementById('profile-player-list'));

    $(document).ready(function () {

        $('#profileQuad').jppquad({
            thresholds: {
                0: 25,
                1: 50,
                2: 75
            },
            maxThreshold: 100,
            createPoints: '@Model.PointsCreate',
            learnPoints: '@Model.PointsLearn',
            explorePoints: '@Model.PointsExplore',
            socializePoints: '@Model.PointsSocialize'
        });


    }); // End document ready



</script>